name: Deploy

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: write

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_REGISTRY }}/blog

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup ARM Builder
        id: arm_builder
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm64
      - name: Authenticate Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
      - name: Define tags
        id: docker_tags
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          flavor: |
            latest=true
          tags: |
            type=raw,value={{date 'YYYYMMDDHHmm'}}
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.arm-builder.outputs.name }}
          push: true
          cache-from: ${{ env.DOCKER_IMAGE }}
          tags: ${{ steps.docker_tags.outputs.tags }}
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Trigger deploy
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.EPONA_DEPLOY_TOKEN }}
          script: |
            github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: 'epona',
              event_type: 'deploy:blog',
              client_payload: {
                docker_image: '${{ env.DOCKER_IMAGE }}'
              }
            })
