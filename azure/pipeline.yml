trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: build
  steps:
  - script: |
      mkdir -p ~/.local/bin $(Build.BinariesDirectory)
      curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    displayName: Install Stack
  - task: Cache@2
    displayName: Cache Stack/GHC snapshot
    inputs:
      key: 'stack | root'
      path: .stack/
      cacheHitVar: 'STACK_SNAPSHOT_RESTORED'
  - task: Cache@2
    displayName: Cache local stack deps
    inputs:
      key: 'stack | stack.yaml.lock'
      path: .stack-work/
      cacheHitVar: 'STACK_DEPS_RESTORED'
  - script: |
      export PATH=$HOME/.local/bin:$PATH
      stack --no-terminal --stack-root $(System.DefaultWorkingDirectory)/.stack setup
    displayName: Build Snapshot
    condition: ne(variables.STACK_SNAPSHOT_RESTORED, 'true')
  - script: |
      export PATH=$HOME/.local/bin:$PATH
      stack --no-terminal --stack-root  $(System.DefaultWorkingDirectory)/.stack build
    displayName: Build Dependencies
    condition: ne(variables.STACK_DEPS_RESTORED, 'true')
  - script: |
      export PATH=$HOME/.local/bin:$PATH
      stack --no-terminal --stack-root $(System.DefaultWorkingDirectory)/.stack install --local-bin-path $(Build.BinariesDirectory)
    displayName: Build Site Executable
    condition: ne(variables.SITE_BIN_RESTORED, 'true')
  - task: PublishBuildArtifacts@1
    displayName: Save static site binary
    inputs:
      pathToPublish: $(Build.BinariesDirectory)
      artifactName: site

- job: deploy_published
  dependsOn: build
  condition: and(succeeded(), eq(variables['build.sourceBranchName'], 'master'))
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: Download site binary
    inputs:
      artifactName: site
      downloadPath: $(System.DefaultWorkingDirectory)
  - script: |
      export PATH=$(System.DefaultWorkingDirectory)/site:$PATH
      chmod +x $(System.DefaultWorkingDirectory)/site/site
      site build
    displayName: Build with published posts
  - task: InstallSSHKey@0
    displayName: Setup SSH
    inputs:
      knownHostsEntry: '$(NexusKnownHost)'
      sshKeySecureFile: 'nexus_deploy'
  - task: CopyFilesOverSSH@0
    displayName: Deploy to prod
    inputs:
      sshEndpoint: 'Nexus'
      sourceFolder: '_site/'
      contents: '**'
      targetFolder: '/var/www/www.mrlee.dev'
      cleanTargetFolder: true
      readyTimeout: '20000'